{
	"name": "df_scdtype_2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_azSQL_SOURCE",
						"type": "LinkedServiceReference"
					},
					"name": "srcstudent"
				},
				{
					"linkedService": {
						"referenceName": "ls_azSQL_TARGET",
						"type": "LinkedServiceReference"
					},
					"name": "trgstudent"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "srcselect"
				},
				{
					"name": "trgselect"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          student_id as integer,",
				"          student_name as string,",
				"          student_college as string,",
				"          student_fee as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'SELECT * FROM student',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> srcstudent",
				"source(output(",
				"          stud_key as integer,",
				"          student_id as integer,",
				"          student_name as string,",
				"          student_college as string,",
				"          student_fee as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'SELECT stud_key,\\nstudent_id,\\nstudent_name,\\nstudent_college,\\nstudent_fee \\nFROM student_scdtype_2\\nWHERE is_active=\\'yes\\'',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> trgstudent",
				"srcstudent select(mapColumn(",
				"          src_student_id = student_id,",
				"          src_student_name = student_name,",
				"          src_student_college = student_college,",
				"          src_student_fee = student_fee",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> srcselect",
				"trgstudent select(mapColumn(",
				"          trg_stud_key = stud_key,",
				"          trg_student_id = student_id,",
				"          trg_student_name = student_name,",
				"          trg_student_college = student_college,",
				"          trg_student_fee = student_fee",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> trgselect",
				"srcselect, trgselect lookup(src_student_id == trg_student_id,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 split(isNull(trg_stud_key),",
				"     !isNull(trg_stud_key)&&(src_student_name!=trg_student_name || src_student_college!=trg_student_college || src_student_fee!=trg_student_fee),",
				"     disjoint: false) ~> split1@(NewRecords, UpdatedRecords)"
			]
		}
	}
}