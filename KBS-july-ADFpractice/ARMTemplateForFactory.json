{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KBS-july-ADFpractice"
		},
		"ls_azSQL_SOURCE_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azSQL_SOURCE'"
		},
		"ls_azSQL_TARGET_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azSQL_TARGET'"
		},
		"ls_kotasadlsgen2storage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_kotasadlsgen2storage1'"
		},
		"ls_onprem_SQL_DATASTORE_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_onprem_SQL_DATASTORE'"
		},
		"ls_azSQL_SOURCE_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bhagyasqljun.database.windows.net"
		},
		"ls_azSQL_SOURCE_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SOURCEDB"
		},
		"ls_azSQL_SOURCE_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "bhagya"
		},
		"ls_azSQL_TARGET_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bhagyasqljun.database.windows.net"
		},
		"ls_azSQL_TARGET_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TARGET"
		},
		"ls_azSQL_TARGET_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "bhagya"
		},
		"ls_kotasadlsgen2storage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kotasadlsgen2storage1.dfs.core.windows.net/"
		},
		"ls_onprem_SQL_DATASTORE_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "KOTA"
		},
		"ls_onprem_SQL_DATASTORE_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DATASTORE"
		},
		"ls_onprem_SQL_DATASTORE_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_Aggregate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_aggregate",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T08:07:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_aggregate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GMD_output_multifiles_currentdate_namechange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata multifiles_as_output",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata multifiles_as_output",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata multifiles_as_output').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datafiles_output_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@variables('v_file_name')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable1",
									"description": "",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_file_name",
										"value": {
											"value": "@concat(\n    split(item().name,'.')[0],\n    '_',\n    formatDateTime(utcNow(), 'MMddyyyy'),\n    '.',\n   split(item().name,'.')[1]\n    )",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"v_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-13T18:39:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_child')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "pl_readdata_folders_Azure_SQL_server_TARGET_Table",
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input_folder",
								"type": "DatasetReference",
								"parameters": {
									"p_folder": {
										"value": "@pipeline().parameters.p_folder",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_folder_file",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": {
													"value": "@pipeline().parameters.p_folder",
													"type": "Expression"
												},
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_azSQL_TARGET",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": "department"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T00:44:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_folder')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_folder_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_conditional_split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_conditional_split",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T14:16:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_conditional_split')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_conditional_split_year_usecase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_conditional_split_year",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T16:52:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_conditional_split_year')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_create_folder_bsed_exten')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata_collection_of_items",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata_collection_of_items",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_collection_of_items').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datafiles_folder_file",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": {
													"value": "@split(item().name,'.')[1]",
													"type": "Expression"
												},
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T06:32:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_folder_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_allfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "src_inputdata",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_src_inputdata_allfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_target_outputdata_allfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-02T12:23:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_src_inputdata_allfiles')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_target_outputdata_allfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_from_azSQL_to_ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_getCustomer_Details]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azSQL_SOURCE",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_output_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "customer.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-06T17:03:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_SOURCE')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_from_current_day_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": {
										"value": "@variables('v_file_name')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_output_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": {
										"value": "@variables('v_file_name')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SetFileName",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_file_name",
							"value": {
								"value": "@concat(\n\t'customer_',\n\tformatDateTime(utcNow(),'MMddyyyy'),\n\t'.csv'\n\t)\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"v_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-04T08:11:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_list')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "src_inputdata",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_src_inputdata_allfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_target_outputdata_allfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-02T13:18:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_src_inputdata_allfiles')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_target_outputdata_allfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_onprem_to_azure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE customer",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_onprem_DATASTORE",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-07T18:46:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_onprem_DATASTORE')]",
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_file_if_it_exist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_File_Exists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee.csv"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "VALIDATE _OUTPUT_OF_GMD",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_File_Exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Check_File_Exists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_File_4m_S_T",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": "employee.csv"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datafiles_output_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": "employee.csv"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-13T17:32:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydata_if_size_greaterthan_2kb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Filecheck_if_graterthan_2kb",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(\n    activity('Get Metadata2').output.size,2048\n    )",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy_data_if _size_greater_2kb_true",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_datafiles_input_file",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_datafiles_output_file",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T07:29:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copydata_if_size_greaterthan_2kb_and_delete_lessthan_2kb_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Filecheck_if_graterthan_2kb",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(\n    activity('Get Metadata2').output.size,2048\n    )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Delete_lessthan_2kb_file_in_input_after_processed",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "ds_datafiles_input_file",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy_data_if _size_greater_2kb_true",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_datafiles_input_file",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_datafiles_output_file",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T09:16:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_create_file_if_data_exists_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LIST_OF_MULTI_TABLES",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT table_name \nFROM control_tbl",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "control_tbl"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LIST_OF_MULTI_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LIST_OF_MULTI_TABLES').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT COUNT(*) AS Cnt FROM @{item().table_name}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_onprem_DATASTORE",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": "customer"
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Lookup1').output.firstRow.Cnt, 0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().table_name}\n",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "control_tbl"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_datafiles_output_file",
														"type": "DatasetReference",
														"parameters": {
															"p_file_name": {
																"value": "@concat(\n    item().table_name,\n    '.csv'\n    )",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-13T12:36:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]",
				"[concat(variables('factoryId'), '/datasets/ds_onprem_DATASTORE')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_create_hirarchy_folder_for_files_Y_M_D_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_ListOfItems_From_Input",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_ListOfItems_From_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_ListOfItems_From_Input').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data files read and load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datafiles_folder_file",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": {
													"value": "YEAR=@{formatDateTime(utcNow(),'yyyy')}/MONTH=@{formatDateTime(utcNow(),'MM')}/DAY=@{formatDateTime(utcNow(),'dd')}",
													"type": "Expression"
												},
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T10:39:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_folder_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_create_hirarchy_folder_for_files_Y_M_D_T_File_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_ListOfItems_From_Input",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_ListOfItems_From_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_ListOfItems_From_Input').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data files read and load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datafiles_folder_file",
											"type": "DatasetReference",
											"parameters": {
												"p_folder": {
													"value": "YEAR=@{formatDateTime(utcNow(),'yyyy')}/MONTH=@{formatDateTime(utcNow(),'MM')}/DAY=@{formatDateTime(utcNow(),'dd')}/TIME=@{formatDateTime(utcNow(),'H-m-s')}",
													"type": "Expression"
												},
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T15:05:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_folder_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_datafiles_src_inputdata_lf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"fileListPath": "datafiles/src_inputdata/listOfFiles.txt",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_src_inputdata_allfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_target_outputdata_allfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-02T14:57:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_src_inputdata_allfiles')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_target_outputdata_allfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_file_once_it_processed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "READ_File_Process_copy_Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_output_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee.csv"
								}
							}
						]
					},
					{
						"name": "Delete_File_in_Input_After_Processed_into_Output",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "READ_File_Process_copy_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee.csv"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T09:16:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_derived1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_derived_1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T16:42:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_derived_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_derived_T_R_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_derived_T_R_2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T07:47:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_derived_T_R_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_failactivity_intentionally-Hourlyrefresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_output_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Update to in progress",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Update to in progress",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "UPDATE config SET job_status='In progress'\r\nWHERE job_id=1\r\n\r\nSELECT 1\r\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "config"
								}
							}
						}
					},
					{
						"name": "Update to Idle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "UPDATE config SET job_status='Idle'\r\nWHERE job_id=1\r\n\r\nSELECT 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "config"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-15T12:04:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_filter",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T13:40:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_filter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_filter_required_copydata_inputdir_outputdir')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1_get_filelist",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1_get_filelist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1_get_filelist').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(\n    item().name,\n    '.csv'\n    )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET_Filtered_output",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"batchCount": 2,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datafiles_output_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T15:07:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incremental_loading_for_multiple_loading_scheduling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListOfTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListOfTables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().load_type,'IL')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CP_FL_LOAD",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"preCopyScript": {
															"value": "TRUNCATE TABLE @{item().table_name}",
															"type": "Expression"
														},
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().table_name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_azSQL_TARGET",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().table_name",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "WMD_Start",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "SELECT last_loaded_date AS WMD_Start\n\tFROM control_tbl\n\tWHERE table_name='@{item().table_name}'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_azSQL_TARGET",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "customer"
														}
													}
												}
											},
											{
												"name": "WMD_End",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "SELECT MAX(@{item().filter_column}) AS WMD_End FROM @{item().table_name}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "customer"
														}
													}
												}
											},
											{
												"name": "CP_Load_Data",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "WMD_Start",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "WMD_End",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().table_name}\nWHERE @{item().filter_column}>'@{activity('WMD_Start').output.firstRow.WMD_Start}' AND @{item().filter_column}<='@{activity('WMD_End').output.firstRow.WMD_End}'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "customer"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_azSQL_TARGET",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().table_name",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "usp_update_control_table",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CP_Load_Data",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_update_control_table]",
													"storedProcedureParameters": {
														"last_loaded_date": {
															"value": {
																"value": "@activity('WMD_End').output.firstRow.WMD_End",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"table_name": {
															"value": {
																"value": "@item().table_name",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_azSQL_TARGET",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "ListOfTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT table_name,filter_column,load_type,batch_no FROM control_tbl\nWHERE batch_no=@{pipeline().parameters.p_batch_no}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "control_tbl"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_batch_no": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-12T19:41:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]",
				"[concat(variables('factoryId'), '/datasets/ds_onprem_DATASTORE')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incremental_loading_for_multiple_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListOfTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListOfTables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "WMD_Start",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT last_loaded_date AS WMD_Start\n\tFROM control_tbl\n\tWHERE table_name='@{item().table_name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_azSQL_TARGET",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": "customer"
											}
										}
									}
								},
								{
									"name": "WMD_End",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT MAX(@{item().filter_column}) AS WMD_End FROM @{item().table_name}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_onprem_DATASTORE",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": "customer"
											}
										}
									}
								},
								{
									"name": "CP_Load_Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WMD_Start",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "WMD_End",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().table_name}\nWHERE @{item().filter_column}>'@{activity('WMD_Start').output.firstRow.WMD_Start}' AND @{item().filter_column}<='@{activity('WMD_End').output.firstRow.WMD_End}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_onprem_DATASTORE",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": "customer"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_azSQL_TARGET",
											"type": "DatasetReference",
											"parameters": {
												"p_table_name": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "usp_update_control_table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP_Load_Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_update_control_table]",
										"storedProcedureParameters": {
											"last_loaded_date": {
												"value": {
													"value": "@activity('WMD_End').output.firstRow.WMD_End",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"table_name": {
												"value": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_azSQL_TARGET",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "ListOfTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT table_name,filter_column FROM control_tbl",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "control_tbl"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-09T15:18:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]",
				"[concat(variables('factoryId'), '/datasets/ds_onprem_DATASTORE')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incremental_loading_for_multiple_tables_FL_IL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListOfTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListOfTables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().load_type,'IL')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "CP_FL_LOAD",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"preCopyScript": {
															"value": "TRUNCATE TABLE @{item().table_name}",
															"type": "Expression"
														},
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().table_name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_azSQL_TARGET",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().table_name",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "WMD_Start",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "SELECT last_loaded_date AS WMD_Start\n\tFROM control_tbl\n\tWHERE table_name='@{item().table_name}'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_azSQL_TARGET",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "customer"
														}
													}
												}
											},
											{
												"name": "WMD_End",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "SELECT MAX(@{item().filter_column}) AS WMD_End FROM @{item().table_name}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "customer"
														}
													}
												}
											},
											{
												"name": "CP_Load_Data",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "WMD_Start",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "WMD_End",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().table_name}\nWHERE @{item().filter_column}>'@{activity('WMD_Start').output.firstRow.WMD_Start}' AND @{item().filter_column}<='@{activity('WMD_End').output.firstRow.WMD_End}'",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_onprem_DATASTORE",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": "customer"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_azSQL_TARGET",
														"type": "DatasetReference",
														"parameters": {
															"p_table_name": {
																"value": "@item().table_name",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "usp_update_control_table",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CP_Load_Data",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_update_control_table]",
													"storedProcedureParameters": {
														"last_loaded_date": {
															"value": {
																"value": "@activity('WMD_End').output.firstRow.WMD_End",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"table_name": {
															"value": {
																"value": "@item().table_name",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "ls_azSQL_TARGET",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "ListOfTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT table_name,filter_column,load_type,batch_no FROM control_tbl\nWHERE batch_no=@{pipeline().parameters.p_batch_no}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "control_tbl"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_batch_no": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-12T19:36:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]",
				"[concat(variables('factoryId'), '/datasets/ds_onprem_DATASTORE')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_incremental_loading_for_single_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WMD_Start",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT last_loaded_date AS WMD_Start\nFROM control_tbl\nWHERE table_name='customer'\n\t",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						}
					},
					{
						"name": "WMD_End",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT MAX(created_at) AS WMD_End FROM customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_onprem_DATASTORE",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						}
					},
					{
						"name": "CP_Load_Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WMD_Start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WMD_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM customer\nWHERE created_at>'@{activity('WMD_Start').output.firstRow.WMD_Start}' AND created_at<='@{activity('WMD_End').output.firstRow.WMD_End}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_onprem_DATASTORE",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "customer"
								}
							}
						]
					},
					{
						"name": "usp_update_control_table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CP_Load_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_update_control_table]",
							"storedProcedureParameters": {
								"last_loaded_date": {
									"value": {
										"value": "@activity('WMD_End').output.firstRow.WMD_End",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"table_name": {
									"value": "customer",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azSQL_TARGET",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-08T14:41:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]",
				"[concat(variables('factoryId'), '/datasets/ds_onprem_DATASTORE')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_inner_join')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_join_inner_columnchange_matching_not_records",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"srcDepartment": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T09:52:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_join_inner_columnchange_matching_not_records')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_jobstatus_Exe_Pipelineactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look_where_my_job_under_status",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT job_status FROM config\nWHERE job_id=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azSQL_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"p_table_name": "config"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Look_where_my_job_under_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\r\n    activity('Look_where_my_job_under_status').output.firstRow.job_status,\r\n        'Idle'\r\n    )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail_to_job_not_Idle",
									"description": "Its not a actual failure we making it failure with this fai activity taking under false in if cond,it means job_status is under inprogress",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "the previous iteration is in progress",
										"errorCode": "1001"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline1 under horlyrefresh pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_failactivity_intentionally-Hourlyrefresh",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-15T17:08:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azSQL_TARGET')]",
				"[concat(variables('factoryId'), '/pipelines/pl_failactivity_intentionally-Hourlyrefresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_child",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"p_folder": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-16T00:44:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input')]",
				"[concat(variables('factoryId'), '/pipelines/pl_child')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_scdtype_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scdtype_1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcStudent": {},
									"trgStudent": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_scdtype_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_scdtype_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scdtype_2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcstudent": {},
									"trgstudent": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_scdtype_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_select_Transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Select_Transformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcEmployee": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T07:57:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_Select_Transformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_simple')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_src_inputdata_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_tar_outputdata_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-02T12:23:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_src_inputdata_product')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_tar_outputdata_product')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_switchactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_action",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "copy",
									"activities": [
										{
											"name": "Copy data1",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datafiles_input_file",
													"type": "DatasetReference",
													"parameters": {
														"p_file_name": "employee1.csv"
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datafiles_output_file",
													"type": "DatasetReference",
													"parameters": {
														"p_file_name": "employee1.csv"
													}
												}
											]
										}
									]
								},
								{
									"value": "Delete",
									"activities": [
										{
											"name": "Delete1",
											"type": "Delete",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataset": {
													"referenceName": "ds_datafiles_output_file",
													"type": "DatasetReference",
													"parameters": {
														"p_file_name": "employee1.csv"
													}
												},
												"enableLogging": false,
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_action": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T15:43:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_until_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('v_until')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_datafiles_input_file",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": "employee1.csv"
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_until",
										"value": {
											"value": "@activity('Get Metadata1').output.exists",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_output_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"v_until": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T17:18:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_validation_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							},
							"timeout": "0.12:00:00",
							"sleep": 10
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_datafiles_input_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datafiles_output_file",
								"type": "DatasetReference",
								"parameters": {
									"p_file_name": "employee1.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-14T17:42:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_input_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_datafiles_output_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azSQL_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azSQL_SOURCE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_SOURCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azSQL_TARGET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azSQL_TARGET",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_folder_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    'output/',\n    dataset().p_folder\n)",
							"type": "Expression"
						},
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "input",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "input",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'input/',\n    dataset().p_folder\n)",
							"type": "Expression"
						},
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input_folder_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    'input/',\n    dataset().p_folder\n    )",
							"type": "Expression"
						},
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_output_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "output",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_src_inputdata_allfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "src_inputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_src_inputdata_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "product.csv",
						"folderPath": "src_inputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_tar_outputdata_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "product.csv",
						"folderPath": "tar_outputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_target_outputdata_allfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "target_outputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_onprem_DATASTORE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_onprem_SQL_DATASTORE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_onprem_SQL_DATASTORE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azSQL_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azSQL_SOURCE_properties_typeProperties_server')]",
					"database": "[parameters('ls_azSQL_SOURCE_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azSQL_SOURCE_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azSQL_SOURCE_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azSQL_TARGET')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azSQL_TARGET_properties_typeProperties_server')]",
					"database": "[parameters('ls_azSQL_TARGET_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azSQL_TARGET_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azSQL_TARGET_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_kotasadlsgen2storage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_kotasadlsgen2storage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_kotasadlsgen2storage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_onprem_SQL_DATASTORE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_onprem_SQL_DATASTORE_properties_typeProperties_server')]",
					"database": "[parameters('ls_onprem_SQL_DATASTORE_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_onprem_SQL_DATASTORE_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_onprem_SQL_DATASTORE_password')]"
					},
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Select_Transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee select(mapColumn(",
						"          EmployeeNo,",
						"          EmployeeName = Ename,",
						"          Job,",
						"          DepartmentNo,",
						"          Salary",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/select',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_aggregate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee select(mapColumn(",
						"          Job,",
						"          Salary",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(Job),",
						"     Salary = sum(Salary)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_aggregate',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_conditional_split')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNO as integer,",
						"          ENAME as string,",
						"          JOB as string,",
						"          MGR as integer,",
						"          HIREDATE as date,",
						"          SAL as decimal(19,4),",
						"          COMM as decimal(19,4),",
						"          DepartmentNO as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.parquet') ~> srcEmployee",
						"srcEmployee split(DepartmentNO==10,",
						"     DepartmentNO==20,",
						"     DepartmentNO==30,",
						"     disjoint: false) ~> split1@(employee10, employee20, employee30)",
						"split1@employee10 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_10',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"split1@employee20 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_20',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2",
						"split1@employee30 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_30',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_conditional_split_year')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee split(year(Hiredate)==2021,",
						"     year(Hiredate)==2022,",
						"     year(Hiredate)==2023,",
						"     disjoint: false) ~> split1@(employee2021, employee2022, employee2023)",
						"split1@employee2021 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employe_2021',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"split1@employee2022 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_2022',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2",
						"split1@employee2023 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_2023',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_derived_1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee derive(Hike = iif(DepartmentNo==10, 0.1*Salary, iif(DepartmentNo==20, 0.2*Salary, 0.3*Salary))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_hike',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_derived_T_R_2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee derive(Year = year(Hiredate),",
						"          Semester = iif(month(Hiredate)<=6,\"H1\",\"H2\"),",
						"          Quarter = case(\r",
						"    month(Hiredate)<=3,\"Q1\",\r",
						"    month(Hiredate)>3 &&month(Hiredate)<=6,\"Q2\",\r",
						"     month(Hiredate)>6 &&month(Hiredate)<=9,\"Q3\",\r",
						"     \"Q4\"\r",
						"),",
						"          Month = case(\r",
						"    month(Hiredate)==1,\"Jan\",\r",
						"    month(Hiredate)==2,\"Feb\",\r",
						"    month(Hiredate)==3,\"Mar\",\r",
						"    month(Hiredate)==4,\"Apr\",\r",
						"    month(Hiredate)==5,\"May\",\r",
						"    month(Hiredate)==6,\"June\",\r",
						"    month(Hiredate)==7,\"July\",\r",
						"    month(Hiredate)==8,\"Aug\",\r",
						"    month(Hiredate)==9,\"Sep\",\r",
						"    month(Hiredate)==10,\"Oct\",\r",
						"    month(Hiredate)==11,\"Nov\",\"Dec\"   \r",
						"        )) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_dateparts',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_filter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee filter(DepartmentNo==10) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_folder',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_join_inner_columnchange_matching_not_records')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcDepartment"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerKey as short,",
						"          CustomerName as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'customer.txt',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"source(output(",
						"          DepartmentNO as short,",
						"          DNAME as string,",
						"          LOC as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'department.txt',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcDepartment",
						"srcEmployee select(mapColumn(",
						"          CustomerKey,",
						"          Name = CustomerName",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"srcDepartment select(mapColumn(",
						"          DepartmentNO,",
						"          Name = DNAME,",
						"          LOC",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1, select2 join(select1@Name == select2@Name,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/joininner',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_scdtype_1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_azSQL_SOURCE",
								"type": "LinkedServiceReference"
							},
							"name": "srcStudent"
						},
						{
							"linkedService": {
								"referenceName": "ls_azSQL_TARGET",
								"type": "LinkedServiceReference"
							},
							"name": "trgStudent"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_azSQL_TARGET",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "ls_azSQL_TARGET",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "srcSelect"
						},
						{
							"name": "tarSelect"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "split1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          student_id as integer,",
						"          student_name as string,",
						"          student_college as string,",
						"          student_fee as decimal(19,4)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: '\\nSELECT * FROM student',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> srcStudent",
						"source(output(",
						"          student_id as integer,",
						"          student_name as string,",
						"          student_college as string,",
						"          student_fee as decimal(19,4)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: '\\nSELECT * FROM student_scd_type_1',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> trgStudent",
						"srcStudent select(mapColumn(",
						"          src_student_id = student_id,",
						"          src_student_name = student_name,",
						"          src_student_college = student_college,",
						"          src_student_fee = student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> srcSelect",
						"trgStudent select(mapColumn(",
						"          trg_student_id = student_id,",
						"          trg_student_name = student_name,",
						"          trg_student_college = student_college,",
						"          trg_student_fee = student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> tarSelect",
						"srcSelect, tarSelect lookup(src_student_id == trg_student_id,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 split(isNull(trg_student_id),",
						"     !isNull(trg_student_id)&&(src_student_name!=trg_student_name||src_student_college!=trg_student_college||src_student_fee!=trg_student_fee),",
						"     disjoint: false) ~> split1@(NewRecords, UpdatedRecords)",
						"split1@NewRecords select(mapColumn(",
						"          student_id = src_student_id,",
						"          student_name = src_student_name,",
						"          student_college = src_student_college,",
						"          student_fee = src_student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"split1@UpdatedRecords select(mapColumn(",
						"          student_id = src_student_id,",
						"          student_name = src_student_name,",
						"          student_college = src_student_college,",
						"          student_fee = src_student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 alterRow(updateIf(1==1)) ~> alterRow1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'student_scd_type_1',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'student_scd_type_1',",
						"     insertable: false,",
						"     updateable: true,",
						"     deletable: false,",
						"     upsertable: false,",
						"     keys:['student_id'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_SOURCE')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_scdtype_2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_azSQL_SOURCE",
								"type": "LinkedServiceReference"
							},
							"name": "srcstudent"
						},
						{
							"linkedService": {
								"referenceName": "ls_azSQL_TARGET",
								"type": "LinkedServiceReference"
							},
							"name": "trgstudent"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_azSQL_TARGET",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "ls_azSQL_TARGET",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "srcselect"
						},
						{
							"name": "trgselect"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "split1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select4"
						},
						{
							"name": "select5"
						},
						{
							"name": "union1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          student_id as integer,",
						"          student_name as string,",
						"          student_college as string,",
						"          student_fee as decimal(19,4)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'SELECT * FROM student',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> srcstudent",
						"source(output(",
						"          stud_key as integer,",
						"          student_id as integer,",
						"          student_name as string,",
						"          student_college as string,",
						"          student_fee as decimal(19,4)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'SELECT stud_key,\\nstudent_id,\\nstudent_name,\\nstudent_college,\\nstudent_fee \\nFROM student_scdtype_2\\nWHERE is_active=\\'yes\\'',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> trgstudent",
						"srcstudent select(mapColumn(",
						"          src_student_id = student_id,",
						"          src_student_name = student_name,",
						"          src_student_college = student_college,",
						"          src_student_fee = student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> srcselect",
						"trgstudent select(mapColumn(",
						"          trg_stud_key = stud_key,",
						"          trg_student_id = student_id,",
						"          trg_student_name = student_name,",
						"          trg_student_college = student_college,",
						"          trg_student_fee = student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> trgselect",
						"srcselect, trgselect lookup(src_student_id == trg_student_id,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 split(isNull(trg_stud_key),",
						"     !isNull(trg_stud_key)&&(src_student_name!=trg_student_name || src_student_college!=trg_student_college || src_student_fee!=trg_student_fee),",
						"     disjoint: false) ~> split1@(NewRecords, UpdatedRecords)",
						"split1@NewRecords select(mapColumn(",
						"          student_id = src_student_id,",
						"          student_name = src_student_name,",
						"          student_college = src_student_college,",
						"          student_fee = src_student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"union1 derive(is_active = \"yes\",",
						"          start_date = currentUTC()) ~> derivedColumn1",
						"split1@UpdatedRecords select(mapColumn(",
						"          stud_key = trg_stud_key",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select4",
						"split1@UpdatedRecords select(mapColumn(",
						"          student_id = src_student_id,",
						"          student_name = src_student_name,",
						"          student_college = src_student_college,",
						"          student_fee = src_student_fee",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"select1, select5 union(byName: true)~> union1",
						"select4 derive(is_active = \"No\",",
						"          end_date = currentUTC()) ~> derivedColumn2",
						"derivedColumn2 alterRow(updateIf(1==1)) ~> alterRow1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'student_scdtype_2',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'student_scdtype_2',",
						"     insertable: true,",
						"     updateable: true,",
						"     deletable: false,",
						"     upsertable: false,",
						"     keys:['stud_key'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_SOURCE')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		}
	]
}