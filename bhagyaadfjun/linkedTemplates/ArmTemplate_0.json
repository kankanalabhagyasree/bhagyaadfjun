{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bhagyaadfjun"
		},
		"ls_azSQL_SOURCE_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azSQL_SOURCE'"
		},
		"ls_azSQL_TARGET_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_azSQL_TARGET'"
		},
		"ls_kotasadlsgen2storage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_kotasadlsgen2storage1'"
		},
		"ls_onprem_SQL_DATASTORE_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_onprem_SQL_DATASTORE'"
		},
		"ls_azSQL_SOURCE_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bhagyasqljun.database.windows.net"
		},
		"ls_azSQL_SOURCE_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SOURCEDB"
		},
		"ls_azSQL_SOURCE_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "bhagya"
		},
		"ls_azSQL_TARGET_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bhagyasqljun.database.windows.net"
		},
		"ls_azSQL_TARGET_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "TARGET"
		},
		"ls_azSQL_TARGET_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "bhagya"
		},
		"ls_kotasadlsgen2storage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kotasadlsgen2storage1.dfs.core.windows.net/"
		},
		"ls_onprem_SQL_DATASTORE_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "KOTA"
		},
		"ls_onprem_SQL_DATASTORE_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DATASTORE"
		},
		"ls_onprem_SQL_DATASTORE_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_azSQL_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azSQL_SOURCE_properties_typeProperties_server')]",
					"database": "[parameters('ls_azSQL_SOURCE_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azSQL_SOURCE_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azSQL_SOURCE_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azSQL_TARGET')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_azSQL_TARGET_properties_typeProperties_server')]",
					"database": "[parameters('ls_azSQL_TARGET_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_azSQL_TARGET_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_azSQL_TARGET_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_kotasadlsgen2storage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_kotasadlsgen2storage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_kotasadlsgen2storage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azSQL_SOURCE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azSQL_SOURCE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_SOURCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azSQL_TARGET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azSQL_TARGET",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "@dataset().p_table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azSQL_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_folder_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    'output/',\n    dataset().p_folder\n)",
							"type": "Expression"
						},
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "input",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "input",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'input/',\n    dataset().p_folder\n)",
							"type": "Expression"
						},
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_input_folder_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n    'input/',\n    dataset().p_folder\n    )",
							"type": "Expression"
						},
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_output_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "output",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_src_inputdata_allfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "src_inputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_src_inputdata_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "product.csv",
						"folderPath": "src_inputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_tar_outputdata_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "product.csv",
						"folderPath": "tar_outputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datafiles_target_outputdata_allfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_kotasadlsgen2storage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "target_outputdata",
						"fileSystem": "datafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_onprem_SQL_DATASTORE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_onprem_SQL_DATASTORE_properties_typeProperties_server')]",
					"database": "[parameters('ls_onprem_SQL_DATASTORE_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_onprem_SQL_DATASTORE_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_onprem_SQL_DATASTORE_password')]"
					},
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				},
				"connectVia": {
					"referenceName": "SelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Select_Transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee select(mapColumn(",
						"          EmployeeNo,",
						"          EmployeeName = Ename,",
						"          Job,",
						"          DepartmentNo,",
						"          Salary",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/select',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_aggregate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNo as short,",
						"          Ename as string,",
						"          Job as string,",
						"          Mgr as string,",
						"          Hiredate as date,",
						"          Salary as double,",
						"          Commission as string,",
						"          DepartmentNo as short",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> srcEmployee",
						"srcEmployee select(mapColumn(",
						"          Job,",
						"          Salary",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(Job),",
						"     Salary = sum(Salary)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_aggregate',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_conditional_split')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "srcEmployee"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						},
						{
							"linkedService": {
								"referenceName": "ls_kotasadlsgen2storage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeNO as integer,",
						"          ENAME as string,",
						"          JOB as string,",
						"          MGR as integer,",
						"          HIREDATE as date,",
						"          SAL as decimal(19,4),",
						"          COMM as decimal(19,4),",
						"          DepartmentNO as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'input',",
						"     fileName: 'employee.parquet') ~> srcEmployee",
						"srcEmployee split(DepartmentNO==10,",
						"     DepartmentNO==20,",
						"     DepartmentNO==30,",
						"     disjoint: false) ~> split1@(employee10, employee20, employee30)",
						"split1@employee10 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_10',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"split1@employee20 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_20',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2",
						"split1@employee30 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'datafiles',",
						"     folderPath: 'output/employee_30',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_kotasadlsgen2storage1')]"
			]
		}
	]
}